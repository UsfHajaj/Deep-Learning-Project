# -*- coding: utf-8 -*-
"""mnist.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/172hFL-eC_lyzRL97ZxfwCuU19ORDI-T4
"""

import tensorflow as tf
import keras
import tensorflow_datasets as tfds
import matplotlib.pyplot as plt

(train,test),metadata=tfds.load('mnist',as_supervised=True,with_info=True,split=['train','test'])

rs=tf.keras.layers.experimental.preprocessing.Rescaling(1./255)

trainds=train.map(lambda x,y:(rs(x,training=True),y))
testds=test.map(lambda x,y:(rs(x,training=True),y))

trainds=trainds.shuffle(1000).batch(32).prefetch(1)
val=testds.batch(32).prefetch(1)

model = tf.keras.Sequential([
    tf.keras.layers.Conv2D(32, (3,3), activation='relu', input_shape=(28, 28, 1)),
    tf.keras.layers.MaxPool2D(2),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(10, activation='softmax')
    ])
model.summary()
model.compile(loss=tf.keras.losses.sparse_categorical_crossentropy,
             metrics=['accuracy'],
             optimizer=tf.keras.optimizers.Adam(learning_rate=1e-5))
tf.keras.utils.plot_model(
    model,
    to_file='model.png',
    show_shapes=False,
    show_dtype=False,
    show_layer_names=True,
    rankdir='TB',
    expand_nested=False,
    dpi=96,
    layer_range=None,
    show_layer_activations=False,
    show_trainable=False
)

Modle_Checkpoint = tf.keras.callbacks.ModelCheckpoint(
    'mnist_save_best_so_far.h5',
    monitor='val_loss',
    save_best_only='True',
    verbose=1
)
Early_Stopping = tf.keras.callbacks.EarlyStopping(
    monitor='val_loss',
    patience=5,
    verbose=1,
    restore_best_weights='True',
    min_delta=0.1
)
Tensor_Board = tf.keras.callbacks.TensorBoard('mnist_tensorboard_logs')

model.fit(
    trainds,
    validation_data=val,
    callbacks=[Early_Stopping, Modle_Checkpoint, Tensor_Board ],
    epochs=100
)

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard

!ls

# Commented out IPython magic to ensure Python compatibility.
# %tensorboard --logdir mnist_tensorboard_logs





